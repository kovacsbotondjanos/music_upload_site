#TODO: use env vars when the application will eventually be containerized
spring.application.name=musicUpload
#spring.datasource.url=jdbc:mysql://mysql-db:3306/music?createDatabaseIfNotExist=true
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${ASD123}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.sql.init.mode=always

#Hibernate configuration
logging.level.org.hibernate.SQL=DEBUG
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=true

#Spring Session configuration
logging.level.org.springframework.session=DEBUG
logging.level.org.springframework.jdbc=DEBUG
server.servlet.session.timeout=10000
spring.session.store-type=jdbc
#spring.session.jdbc.cleanup-cron="0 0 * * * *"
spring.session.jdbc.initialize-schema=always
spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-mysql.sql
spring.session.context-name=SPRING_SECURITY_CONTEXT


#http configuration
spring.mvc.hiddenmethod.filter.enabled=true

#HikariCP configuration
spring.datasource.hikari.maximum-pool-size=100
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=20000

#file upload configuration
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

#Minio configuration
minio.endpoint=http://${MINIO_DATASOURCE_URL}:9000
minio.accessKey=${MINIO_ROOT_USER}
minio.secretKey=${MINIO_ROOT_PASSWORD}
minio.pictureBucketName=image-upload-bucket
minio.songBucketName=song-upload-bucket
imagePrefixToRemove=image/
songPrefixToRemove=audio/
linkExpirationTime=7200

#admin user
admin.password=password
admin.username=admin
admin.email=admin@admin.com

logging.level.org.springframework.security=DEBUG